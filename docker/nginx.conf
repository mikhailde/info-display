user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        # Блок для проксирования запросов к сервису управления контентом
        location /api/v1/content {
            proxy_pass http://content:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Разрешаем методы GET и POST
            limit_except GET POST {
                deny all;
            }
        }
        
        # Блок для проксирования запросов к сервису управления устройством
        location /api/v1/device/update {
            proxy_pass http://device:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        
            # Разрешаем метод POST
            limit_except POST {
                deny all;
            }
        }

        # Блок для проксирования запросов к сервису погоды
        location /api/v1/weather {
            proxy_pass http://weather:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Разрешаем метод GET
            limit_except GET {
                deny all;
            }
        }

        # Блок для обслуживания веб-интерфейса
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        # location / {
        #    root   /usr/share/nginx/html;
        #    index  index.html index.htm;
        # }
    }
}
